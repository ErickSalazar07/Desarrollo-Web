{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardClienteComponent = class DashboardClienteComponent {\n  constructor(http, route, servicioCliente, servicioMascota) {\n    this.http = http;\n    this.route = route;\n    this.servicioCliente = servicioCliente;\n    this.servicioMascota = servicioMascota;\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      const id = Number(idParam);\n      this.servicioCliente.findById(id).subscribe(cliente => {\n        this.cliente = cliente;\n      });\n    } else {\n      console.error('ID no encontrado en la ruta');\n    }\n  }\n};\nDashboardClienteComponent = __decorate([Component({\n  selector: 'app-dashboard-cliente',\n  templateUrl: './dashboard-cliente.component.html',\n  styleUrls: ['./dashboard-cliente.component.css']\n})], DashboardClienteComponent);","map":{"version":3,"names":["Component","DashboardClienteComponent","constructor","http","route","servicioCliente","servicioMascota","ngOnInit","idParam","snapshot","paramMap","get","id","Number","findById","subscribe","cliente","console","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/erick/Desarrollo-Web/veterinaria-angular/src/app/cliente/dashboard-cliente/dashboard-cliente.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClienteService } from 'src/app/servicio/cliente.service';\nimport { MascotaService } from 'src/app/servicio/mascota.service';\nimport { Cliente } from 'src/app/modelo/cliente';\n\n\n@Component({\n  selector: 'app-dashboard-cliente',\n  templateUrl: './dashboard-cliente.component.html',\n  styleUrls: ['./dashboard-cliente.component.css']\n})\nexport class DashboardClienteComponent {\n  cliente!: Cliente;\n  constructor(private http: HttpClient, private route: ActivatedRoute,\n      private servicioCliente: ClienteService, private servicioMascota: MascotaService) { }\n  ngOnInit(): void {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      const id = Number(idParam);\n      this.servicioCliente.findById(id).subscribe(cliente => {\n        this.cliente = cliente;\n      });\n    } else {\n      console.error('ID no encontrado en la ruta');\n    }\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAe,eAAe;AAYzC,WAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAEpCC,YAAoBC,IAAgB,EAAUC,KAAqB,EACvDC,eAA+B,EAAUC,eAA+B;IADhE,KAAAH,IAAI,GAAJA,IAAI;IAAsB,KAAAC,KAAK,GAALA,KAAK;IACvC,KAAAC,eAAe,GAAfA,eAAe;IAA0B,KAAAC,eAAe,GAAfA,eAAe;EAAoB;EACxFC,QAAQA,CAAA;IACN,MAAMC,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACtD,IAAIH,OAAO,KAAK,IAAI,EAAE;MACpB,MAAMI,EAAE,GAAGC,MAAM,CAACL,OAAO,CAAC;MAC1B,IAAI,CAACH,eAAe,CAACS,QAAQ,CAACF,EAAE,CAAC,CAACG,SAAS,CAACC,OAAO,IAAG;QACpD,IAAI,CAACA,OAAO,GAAGA,OAAO;MACxB,CAAC,CAAC;KACH,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;;EAEhD;CACD;AAfYjB,yBAAyB,GAAAkB,UAAA,EALrCnB,SAAS,CAAC;EACToB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACWrB,yBAAyB,CAerC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}