{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.administradores = [];\n    this.URL_ROOT = \"http://localhost:8090/admin\";\n  }\n  findByCorreo(correo) {\n    return this.http.get(`${this.URL_ROOT}/get-admin-correo/${correo}`);\n  }\n  findByUsername(username) {\n    return this.http.get(`${this.URL_ROOT}/get-admin-username/${username}`);\n  }\n  findById(id) {\n    return this.http.get(`${this.URL_ROOT}/get-admin/${id}`);\n  }\n  findAll() {\n    return this.http.get(`${this.URL_ROOT}/admins`);\n  }\n  addAdministrador(admin) {\n    return this.http.post(`${this.URL_ROOT}/add`, admin);\n  }\n  updateAdministrador(admin) {\n    return this.http.put(`${this.URL_ROOT}/update/${admin.id}`, admin);\n  }\n  deleteAdministrador(id) {\n    return this.http.delete(`${this.URL_ROOT}/delete/${id}`);\n  }\n  static {\n    this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AdminService","constructor","http","administradores","URL_ROOT","findByCorreo","correo","get","findByUsername","username","findById","id","findAll","addAdministrador","admin","post","updateAdministrador","put","deleteAdministrador","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/erick/Desarrollo-Web/veterinaria-angular/src/app/servicio/admin.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Admin } from '../modelo/admin';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient) { }\n\n  administradores: Admin[] = [];\n\n  URL_ROOT: string = \"http://localhost:8090/admin\";\n\n  findByCorreo(correo: string): Observable<Admin> {\n    return this.http.get<Admin>(`${this.URL_ROOT}/get-admin-correo/${correo}`);\n  }\n\n  findByUsername(username: string): Observable<Admin> {\n    return this.http.get<Admin>(`${this.URL_ROOT}/get-admin-username/${username}`);\n  }\n\n  findById(id: number): Observable<Admin> {\n    return this.http.get<Admin>(`${this.URL_ROOT}/get-admin/${id}`);\n  }\n\n  findAll(): Observable<Admin[]> {\n    return this.http.get<Admin[]>(`${this.URL_ROOT}/admins`);\n  }\n\n  addAdministrador(admin: Admin): Observable<void> {\n    return this.http.post<void>(`${this.URL_ROOT}/add`, admin);\n  }\n\n  updateAdministrador(admin: Admin): Observable<void> {\n    return this.http.put<void>(`${this.URL_ROOT}/update/${admin.id}`, admin);\n  }\n\n  deleteAdministrador(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.URL_ROOT}/delete/${id}`);\n  }\n}\n\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,eAAe,GAAY,EAAE;IAE7B,KAAAC,QAAQ,GAAW,6BAA6B;EAJR;EAMxCC,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACH,QAAQ,qBAAqBE,MAAM,EAAE,CAAC;EAC5E;EAEAE,cAAcA,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACH,QAAQ,uBAAuBK,QAAQ,EAAE,CAAC;EAChF;EAEAC,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACH,QAAQ,cAAcO,EAAE,EAAE,CAAC;EACjE;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACV,IAAI,CAACK,GAAG,CAAU,GAAG,IAAI,CAACH,QAAQ,SAAS,CAAC;EAC1D;EAEAS,gBAAgBA,CAACC,KAAY;IAC3B,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAO,GAAG,IAAI,CAACX,QAAQ,MAAM,EAAEU,KAAK,CAAC;EAC5D;EAEAE,mBAAmBA,CAACF,KAAY;IAC9B,OAAO,IAAI,CAACZ,IAAI,CAACe,GAAG,CAAO,GAAG,IAAI,CAACb,QAAQ,WAAWU,KAAK,CAACH,EAAE,EAAE,EAAEG,KAAK,CAAC;EAC1E;EAEAI,mBAAmBA,CAACP,EAAU;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACiB,MAAM,CAAO,GAAG,IAAI,CAACf,QAAQ,WAAWO,EAAE,EAAE,CAAC;EAChE;;;uBAlCWX,YAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZvB,YAAY;MAAAwB,OAAA,EAAZxB,YAAY,CAAAyB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}