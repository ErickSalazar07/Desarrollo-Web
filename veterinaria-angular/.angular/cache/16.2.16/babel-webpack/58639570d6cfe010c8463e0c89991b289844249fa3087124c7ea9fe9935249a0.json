{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VeterinarioService {\n  constructor(http) {\n    this.http = http;\n    this.veterinarios = [];\n    this.URL_ROOT = \"http://localhost:8090/veterinario\";\n  }\n  findByCedula(cedula) {\n    return this.http.get(this.URL_ROOT + `/get-veterinario-cedula/${cedula}`);\n  }\n  findAll() {\n    return this.http.get(this.URL_ROOT + `/veterinarios`);\n  }\n  cambiarEstadoByCedula(cedula) {\n    return this.http.put(this.URL_ROOT + `/update-estado/${cedula}`, {});\n  }\n  addVeterinario(veterinario) {\n    return this.http.post(this.URL_ROOT + `/add`, veterinario);\n  }\n  updateVeterinarioById(veterinario) {\n    return this.http.put(this.URL_ROOT + `/update-id/${veterinario.id}`, veterinario);\n  }\n  findById(id) {\n    return this.http.get(this.URL_ROOT + `/get-veterinario/${id}`);\n  }\n  updateVeterinarioByCedula(veterinario) {\n    return this.http.put(this.URL_ROOT + `/update-cc/${veterinario.cedula}`, veterinario);\n  }\n  // KPIs\n  obtenerNumVeterinariosActivos() {\n    return this.http.get(this.URL_ROOT + `/get-num-veterinarios-activos`);\n  }\n  obtenerNumVeterinariosInactivos() {\n    return this.http.get(this.URL_ROOT + `/get-num-veterinarios-inactivos`);\n  }\n  static {\n    this.ɵfac = function VeterinarioService_Factory(t) {\n      return new (t || VeterinarioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: VeterinarioService,\n      factory: VeterinarioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["VeterinarioService","constructor","http","veterinarios","URL_ROOT","findByCedula","cedula","get","findAll","cambiarEstadoByCedula","put","addVeterinario","veterinario","post","updateVeterinarioById","id","findById","updateVeterinarioByCedula","obtenerNumVeterinariosActivos","obtenerNumVeterinariosInactivos","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/erick/Desarrollo-Web/veterinaria-angular/src/app/servicio/veterinario.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Veterinario } from '../modelo/veterinario';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VeterinarioService {\n\n\n  constructor(private http: HttpClient) { }\n\n  veterinarios: Veterinario[] = [];\n\n  URL_ROOT:string = \"http://localhost:8090/veterinario\";\n\n  findByCedula(cedula: string): Observable<Veterinario> {\n    return this.http.get<Veterinario>(this.URL_ROOT + `/get-veterinario-cedula/${cedula}`);\n  } \n  findAll(): Observable<Veterinario[]> {\n    return this.http.get<Veterinario[]>(this.URL_ROOT + `/veterinarios`);\n  } \n\n  cambiarEstadoByCedula(cedula: string): Observable<Veterinario> {\n    return this.http.put<Veterinario>(this.URL_ROOT + `/update-estado/${cedula}`, {});\n  }\n\n  addVeterinario(veterinario: Veterinario): Observable<any> {\n    return this.http.post(this.URL_ROOT + `/add`, veterinario);\n  }\n\n  updateVeterinarioById(veterinario: Veterinario): Observable<Veterinario> {\n    return this.http.put<Veterinario>(this.URL_ROOT + `/update-id/${veterinario.id}`, veterinario);\n  }\n\n  findById(id: number): Observable<Veterinario> {\n    return this.http.get<Veterinario>(this.URL_ROOT + `/get-veterinario/${id}`);\n  }\n\n  updateVeterinarioByCedula(veterinario: Veterinario): Observable<Veterinario> {\n    return this.http.put<Veterinario>(this.URL_ROOT + `/update-cc/${veterinario.cedula}`, veterinario);\n  }\n\n// KPIs\n\n  obtenerNumVeterinariosActivos(): Observable<number> {\n    return this.http.get<number>(this.URL_ROOT + `/get-num-veterinarios-activos`);\n  }\n\n  obtenerNumVeterinariosInactivos(): Observable<number> {\n    return this.http.get<number>(this.URL_ROOT + `/get-num-veterinarios-inactivos`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,YAAY,GAAkB,EAAE;IAEhC,KAAAC,QAAQ,GAAU,mCAAmC;EAJb;EAMxCC,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAc,IAAI,CAACH,QAAQ,GAAG,2BAA2BE,MAAM,EAAE,CAAC;EACxF;EACAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAACN,IAAI,CAACK,GAAG,CAAgB,IAAI,CAACH,QAAQ,GAAG,eAAe,CAAC;EACtE;EAEAK,qBAAqBA,CAACH,MAAc;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAc,IAAI,CAACN,QAAQ,GAAG,kBAAkBE,MAAM,EAAE,EAAE,EAAE,CAAC;EACnF;EAEAK,cAAcA,CAACC,WAAwB;IACrC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACT,QAAQ,GAAG,MAAM,EAAEQ,WAAW,CAAC;EAC5D;EAEAE,qBAAqBA,CAACF,WAAwB;IAC5C,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAc,IAAI,CAACN,QAAQ,GAAG,cAAcQ,WAAW,CAACG,EAAE,EAAE,EAAEH,WAAW,CAAC;EAChG;EAEAI,QAAQA,CAACD,EAAU;IACjB,OAAO,IAAI,CAACb,IAAI,CAACK,GAAG,CAAc,IAAI,CAACH,QAAQ,GAAG,oBAAoBW,EAAE,EAAE,CAAC;EAC7E;EAEAE,yBAAyBA,CAACL,WAAwB;IAChD,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAc,IAAI,CAACN,QAAQ,GAAG,cAAcQ,WAAW,CAACN,MAAM,EAAE,EAAEM,WAAW,CAAC;EACpG;EAEF;EAEEM,6BAA6BA,CAAA;IAC3B,OAAO,IAAI,CAAChB,IAAI,CAACK,GAAG,CAAS,IAAI,CAACH,QAAQ,GAAG,+BAA+B,CAAC;EAC/E;EAEAe,+BAA+BA,CAAA;IAC7B,OAAO,IAAI,CAACjB,IAAI,CAACK,GAAG,CAAS,IAAI,CAACH,QAAQ,GAAG,iCAAiC,CAAC;EACjF;;;uBA5CWJ,kBAAkB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBvB,kBAAkB;MAAAwB,OAAA,EAAlBxB,kBAAkB,CAAAyB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}